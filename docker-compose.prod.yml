version: "3.8"

x-base: &base
  image: node:18-alpine
  working_dir: /app
  restart: 'no'
  environment:
    NODE_ENV: production
    DATABASE_URL: postgresql://postgres:cQM6q7g505tP@postgres_tuto_nxt_postgres:5432/postgres
    SESSION_SECRET: ${SESSION_SECRET}
    SMTP_HOST: ${SMTP_HOST}
    SMTP_PORT: ${SMTP_PORT}
    SMTP_USER: ${SMTP_USER}
    SMTP_PASS: ${SMTP_PASS}
    SMTP_FROM: ${SMTP_FROM}
    WEBHOOK_URL: ${WEBHOOK_URL}
  networks:
    - network_public
  command: |
    sh -c "
      apk add --no-cache git python3 make g++ &&
      rm -rf /tmp/app &&
      git clone https://github.com/murillobc/tutoriais-nxt.git /tmp/app &&
      cp -r /tmp/app/* . &&
      npm ci --only=production &&
      npm run build
    "

services:
  # Build da aplicação
  nextest-build:
    <<: *base
    restart: "no"
    deploy:
      replicas: 1
      restart_policy:
        condition: none

  # Aplicação principal
  nextest-app:
    <<: *base
    command: ['node', 'dist/server/index.js']
    restart: always
    networks:
      - network_public
    volumes:
      - nextest_logs:/app/logs
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.nextest.rule=Host(`tutoriais.automai.com.br`)
        - traefik.http.routers.nextest.entrypoints=websecure
        - traefik.http.routers.nextest.tls.certresolver=letsencryptresolver
        - traefik.http.services.nextest.loadbalancer.server.port=3000
        - traefik.http.services.nextest.loadbalancer.passHostHeader=true
    depends_on:
      - nextest-build

  # Redis para cache
  redis:
    image: redis:7-alpine
    restart: always
    networks:
      - network_public
    volumes:
      - redis_data:/data

volumes:
  nextest_logs:
  redis_data:

networks:
  network_public:
    external: true
    name: network_public
